#!/usr/bin/env python
from __future__ import division

import argparse

from keras.models import load_model

from lasvegas import eval

parser = argparse.ArgumentParser()
parser.add_argument('-n', '--games', default=1000, type=int,
                    help='number of games to run the evaluation for')
parser.add_argument('-a', '--agent', default='model', type=str,
                    choices=['biggest', 'greedy', 'model', 'random',
                             'richest'],
                    help='agent type to evaluate')
parser.add_argument('-b', '--baseline', default='random', type=str,
                    choices=['biggest', 'changing', 'greedy', 'model',
                             'random', 'richest'],
                    help='baseline agent type to evaluate against')
parser.add_argument('-m', '--model', default=None, type=str,
                    help='filename of the model to use')
parser.add_argument('-M', '--baseline-model', default=None, type=str,
                    help='filename of the model to use for the baseline')
args = parser.parse_args()

if args.model:
    model = load_model(args.model)
else:
    model = None

if args.baseline_model:
    baseline_model = load_model(args.baseline_model)
else:
    baseline_model = None

stats = eval.eval_model(args.agent, args.games, args.baseline,
                        model, baseline_model)

print('{:>20}: {}'.format('Average score', stats['total'] / args.games))
print('{:>20}: {}'.format('Total games', args.games))
print('{:>20}: {}'.format('Wins', stats['wins']))
print('{:>20}: {}'.format('Draws', stats['draws']))
print('{:>20}: {}'.format('Losses', stats['losses']))
