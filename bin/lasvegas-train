#!/usr/bin/env python

import argparse

from keras.models import load_model

from lasvegas import constants
from lasvegas.state import create_model
from lasvegas import train, turns

parser = argparse.ArgumentParser()
parser.add_argument('-n', '--games', default=1000, type=int,
                    help='number of games to run the training for')
parser.add_argument('-s', '--start', default=None, type=str,
                    help='model to start training with')
parser.add_argument('-b', '--baseline', default='random', type=str,
                    choices=['biggest', 'changing', 'greedy', 'model',
                             'random', 'richest', 'self'],
                    help='baseline agent type to train against')
parser.add_argument('-m', '--model', default='model.h5', type=str,
                    help='baseline agent model to train against')
parser.add_argument('-o', '--output', default='model.h5', type=str,
                    help='output filename of the model')
args = parser.parse_args()

if args.start:
    model = load_model(args.start)
else:
    model = create_model()

# If our baseline is a model, load it
if args.baseline == 'model':
    baseline_model = load_model(args.model)
elif args.baseline == 'self':
    args.baseline = 'model'
    baseline_model = model
else:
    baseline_model = None

# Train and save the model
train.train_model(model, args.games, args.baseline, baseline_model)
model.save(args.model)
